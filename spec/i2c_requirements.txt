I2C Master and Slave Software Component Requirements 
====================================================

:Author: Dan Wilkinson
:Version: 1.0

Introduction
============

The XMOS I2C component is to be in the form of a function library, since it most deployments it will onyl require a fraction of the MIPS availabel in a single 50 MIPS thread. The library will, when complete, cover the whole I2C spec up to section 12, with the exception of CBUS compatibility.

Implementation
==============

The component should be in inline library form and should be implemented in 3 phases:

phase 1) single-master library offering 7 bit addressing in both standard and fast-mode, and providing for slave clock stretching (see section 8.1 of teh spec), but without cbus functionality (10.1.3). A testbench slave should be designed to validate this master, while keeping in mind that this testbench slave becomes a proper component in the next phase. 

phase 2) add slave library supporting same functions as above, and alter the testbench such that it consists of one master and several slave instances.

phase 3) add multi-master/arbitration capability to the master.

The following features are not required:

* 10 bit addressing
* cbus compatability
* hs-mode (3.4 mbit operation)

Verification
============

There is no existing testplan.

In phase 1, there is no need to finish all verification of the master, simply deliver a fully feature complete single-master with reasonable verification coverage. 

In phase 2, the feature complete I2C slave should be finished, and then the verification of both master and slave components should be completed by placing one master and multiple slave components in a simulator testbench. This phase delivers a feature complete fully verified single-master and a slave component. The simulator testbench is designed to get full coverage of the spec. In addition, Mindtree should propose a method by which an xmos single-master can be verified with multiple third party I2C slaves, and a method by which an xmos slave can be verified with a single third party I2C master. See here

In phase 3, the master is extended for multi master capability, and the testbench and testcases extended to verify it. Ideally this is also demonstrated using third party slaves, ideally using the same method as in phase 2.

 http://en.wikipedia.org/wiki/I%C2%B2C#Development_tools 

for possible solutions.

XTA
===

MindTree should determine which XTA checks are required to ensure the component meets timing. Because the component is a library, only timing checks which have their star and endpoints in the same library function are actually required. However, documentation should include notes on where to position timing checks to validate the overall correct operation of the I2C library when integrated into end application code.

Optimisations
=============

The component should be optimised for minimum memory footprint and minimum usage of MIPS. Where a user doesn't require certain I2C options (e.g. multi master, they can use #defines to ensure that no memory or MIPS is wasted on functions they don't need.

Demonstrations
==============

There is no requirement for a HW demo at this time.

Documentation
=============

Documentation deliverables are as specified in the XMOS/MindTree Statement of Work

 

